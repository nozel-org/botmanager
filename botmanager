#!/bin/sh

#############################################################################
# Version 0.3.0-RELEASE (30-01-2023)
#############################################################################

#############################################################################
# Copyright 2023 Nozel/Sebas Veeke. Licenced under a Creative Commons
# Attribution-NonCommercial-ShareAlike 4.0 International License.
#
# See https://creativecommons.org/licenses/by-nc-sa/4.0/
#
# Contact:
# > e-mail      mail@nozel.org
# > GitHub      nozel-org
#############################################################################

#############################################################################
# VARIABLES
#############################################################################

# serverbot version
BOTMANAGER_VERSION='0.3.0'

# commands
CURL="$(command -v curl)"
WGET="$(command -v wget)"

# program variables
BOTMANAGER_CONFIG_SOURCE='https://raw.githubusercontent.com/nozel-org/botmanager/main/resources/botmanager.conf'

# colors
NC='\033[0;0m'
BOLD='\033[1m'
#UNDER='\033[4m'
#WHITE='\033[1;37m'
#RED='\033[0;31m'
#GREEN='\033[0;32m'
YELLOW='\033[1;33m'
LRED='\033[1;31m'
#LGREEN='\033[1;32m'
#LMAGENTA='\033[1;35m'
#LCYAN='\033[1;36m'

####################################################################################################
# ARGUMENT HANDLING
####################################################################################################

# populate validation variables with zeros for validation
ARGUMENT_VERSION='0'
ARGUMENT_HELP='0'
ARGUMENT_CRON='0'
ARGUMENT_DISABLE_CRON='0'
ARGUMENT_OVERVIEW='0'
ARGUMENT_INSTALL='0'
ARGUMENT_REMOVE='0'
ARGUMENT_UPDATE='0'

# read arguments
while test -n "$1"; do
    case "$1" in
        # options
        --version|-version|version|--v|-v)
            ARGUMENT_VERSION='1'
            shift
            ;;

        --help|-help|help|--h|-h)
            ARGUMENT_HELP='1'
            shift
            ;;
        
        --cron|-cron|cron)
            ARGUMENT_CRON='1'
            shift
            ;;

        --disable-cron|-disable-cron|disable-cron)
            ARGUMENT_CRON='1'
            shift
            ;;

        # features
        --overview|overview|-o|--list|list|-l|--show|show)
            ARGUMENT_OVERVIEW='1'
            shift
            ;;

        --install|install|-i)
            ARGUMENT_INSTALL='1'
            shift
            ;;

        --remove|remove|-r)
            ARGUMENT_REMOVE='1'
            shift
            ;;

        --update|update|-u)
            ARGUMENT_UPDATE='1'
            shift
            ;;

        # other
        *)
            ARGUMENT_NONE='1'
            shift
            ;;
    esac
done


####################################################################################################
# ERROR FUNCTIONS
####################################################################################################

error() {
    printf "%b%s%b\n" "${LRED}" "$@" "${NC}"
    exit 1
}

####################################################################################################
# REQUIREMENT AND VALIDATION FUNCTIONS
####################################################################################################

requirement_root() {
    # show error when botmanager isn't run with root privileges
    if [ "$(id -u)" -ne '0' ]; then
        error 'botmanager: error: used argument must be run with root privileges'
    fi
}

requirement_os() {
    # show error when freebsd-version cannot be found
    if [ ! "$(command -v freebsd-version)" ]; then
        error 'botmanager: operating system is not supported'
    fi
}

requirement_curl() {
    # show error when curl cannot be found
    if [ ! "$(command -v curl)" ]; then
        error 'botmanager: error: curl is not installed'
    fi
}

requirement_wget() {
    # show error when wget cannot be found
    if [ ! "$(command -v curl)" ]; then
        error 'botmanager: error: wget is not installed'
    fi
}

####################################################################################################
# GENERAL FUNCTIONS
####################################################################################################

option_version() {
    printf "%bBotmanager %s %b\n" "${BOLD}" "${SERVERBOT_VERSION}" "${NC}"
    printf "%bCopyright (C) 2023 Nozel.%b\n" "${BOLD}" "${NC}"
    printf "%bLicense CC Attribution-NonCommercial-ShareAlike 4.0 Int.%b\n\n" "${BOLD}" "${NC}"
    printf "%bWritten by Sebas Veeke%b\n" "${BOLD}" "${NC}"

    # exit when done
    exit 0
}

option_help() {
    printf "%bUsage:%b\n" "${BOLD}" "${NC}"
    printf "%b  botmanager [feature]...%b\n" "${BOLD}" "${NC}"
    printf "%b  botmanager [option]...%b\n\n" "${BOLD}" "${NC}"
    printf "%bFeatures:%b\n" "${BOLD}" "${NC}"
    printf "  -o, --overview             Shows the bot status on this device\n"
    printf "  -i, --install              Install one of the bots\n"
    printf "  -r, --remove               Remove a installed bot\n"
    printf "  -u, --update               Update all installed bots\n"
    printf "%bOptions:%b\n" "${BOLD}" "${NC}"
    printf "  --cron                     Set daily automatic update\n"
    printf "  --disable-cron             Set daily automatic update\n"
    printf "  --help                     Display this help and exit\n"
    printf "  --version                  Display version information and exit\n"

    # exit when done
    exit 0
}

option_cron() {
    requirement_root

    printf "%b[1/2] Adding cronjob for automatic bot updates%b\n" "${BOLD}" "${NC}"
    rm -f /etc/cron.d/botmanager
    printf "# This cronjob manages daily automated botmanager program updates\n" > /etc/cron.d/botmanager
    printf "0 1 * * * root /usr/local/bin/botmanager --update\n" >> /etc/cron.d/botmanager
    printf "%b[2/2] Changing cronjob owner and group to root:wheel%b\n" "${BOLD}" "${NC}"
    chown root:wheel /etc/cron.d/botmanager
    printf "\n%bAll done! \\\( ^ ᴗ ^ )/%b\n\n" "${BOLD}" "${NC}"
    printf "\n%bYour new schedule can be found in /etc/cron.d/botmanager.%b\n" "${BOLD}" "${NC}"

    # exit when done
    exit 0
}

option_disable_cron() {
    requirement_root

    printf "%b[1] Removing botmanager cronjob%b\n" "${BOLD}" "${NC}"
    rm -f /etc/cron.d/botmanager
    printf "\n%bAll done! \\\( ^ ᴗ ^ )/%b\n\n" "${BOLD}" "${NC}"

    # exit when done
    exit 0
}

####################################################################################################
# SUPPORT FUNCTIONS
####################################################################################################

evaluate_variable() {
    PROGRAM_NAME="${1}"
    PROGRAM_VAR="${2}"

    #VARIABLES=`set | grep "^$pattern.*=" | cut -f 1 -d '='`
    EVALUATION_OUTPUT=`set | grep "${PROGRAM_NAME}_${PROGRAM_VAR}" | cut -f 1 -d '='`
    for v in $EVALUATION_OUTPUT; do
        eval vval="\$${v}"
        echo $vval
    done
}   

####################################################################################################
# GATHER FUNCTIONS
####################################################################################################

gather_bot_information() {
    BOTMANAGER_CONFIG_TEMP_FILE="$(mktemp)"
    wget -q "${BOTMANAGER_CONFIG_SOURCE}" -O "${BOTMANAGER_CONFIG_TEMP_FILE}"
}

remove_bot_information() {
    rm "${BOTMANAGER_CONFIG_TEMP_FILE}"
}


####################################################################################################
# FEATURE FUNCTIONS
####################################################################################################

feature_overview() {
    gather_bot_information

    # source botmanager config variables
    . "${BOTMANAGER_CONFIG_TEMP_FILE}"

    # generate overview
    for program in $(echo $BOTS); do
        #for i in `evaluate_variable $program name`; do
        for i in `evaluate_variable ${program} NAME`; do
            echo $i
        done
        #BOT_NAME="${program}_NAME"
        #echo "${BOT_NAME}"
    done

    remove_bot_information
}

####################################################################################################
# MAIN FUNCTIONS
####################################################################################################

botmanager_main() {
    requirement_os
    requirement_root

    if [ "${ARGUMENT_OVERVIEW}" = '1' ]; then
        feature_overview
    elif [ "${ARGUMENT_INSTALL}" = '1' ]; then
        feature_install
    elif [ "${ARGUMENT_REMOVE}" = '1' ]; then
        feature_remove
    elif [ "${ARGUMENT_UPDATE}" = '1' ]; then
        feature_update
    elif [ "${ARGUMENT_CRON}" = '1' ]; then
        option_cron
    elif [ "${ARGUMENT_DISABLE_CRON}" = '1' ]; then
        option_disable_cron
    elif [ "${ARGUMENT_VERSION}" = '1' ]; then
        option_version
    elif [ "${ARGUMENT_HELP}" = '1' ]; then
        option_help
    # the overview is shown when no arguments were given
    else
        feature_overview
    fi
}

####################################################################################################
# CALL MAIN FUNCTIONS
####################################################################################################

botmanager_main
